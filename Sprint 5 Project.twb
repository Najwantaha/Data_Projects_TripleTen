<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20243.24.1010.1014                               -->
<workbook original-version='18.1' source-build='2024.3.0 (20243.24.1010.1014)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AccessibleZoneTabOrder />
    <AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <MarkAnimation />
    <ObjectModelEncapsulateLegacy />
    <ObjectModelExtractV2 />
    <ObjectModelTableType />
    <SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='Orders+ (Superstore (1))' inline='true' name='federated.1pp1z5p19awkeq1cp8rvy0iejvcm' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Superstore (1)' name='excel-direct.10qlysu0o38f8a1eznw981yv1ehx'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/najwa/Downloads/Superstore (1).xls' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation join='left' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[Orders].[Order ID]' />
              <expression op='[Returns].[Order ID]' />
            </expression>
          </clause>
          <relation connection='excel-direct.10qlysu0o38f8a1eznw981yv1ehx' name='Orders' table='[Orders$]' type='table'>
            <columns gridOrigin='A1:U9995:no:A1:U9995:0' header='yes' outcome='6'>
              <column datatype='integer' name='Row ID' ordinal='0' />
              <column datatype='string' name='Order ID' ordinal='1' />
              <column datatype='date' name='Order Date' ordinal='2' />
              <column datatype='date' name='Ship Date' ordinal='3' />
              <column datatype='string' name='Ship Mode' ordinal='4' />
              <column datatype='string' name='Customer ID' ordinal='5' />
              <column datatype='string' name='Customer Name' ordinal='6' />
              <column datatype='string' name='Segment' ordinal='7' />
              <column datatype='string' name='Country/Region' ordinal='8' />
              <column datatype='string' name='City' ordinal='9' />
              <column datatype='string' name='State' ordinal='10' />
              <column datatype='integer' name='Postal Code' ordinal='11' />
              <column datatype='string' name='Region' ordinal='12' />
              <column datatype='string' name='Product ID' ordinal='13' />
              <column datatype='string' name='Category' ordinal='14' />
              <column datatype='string' name='Sub-Category' ordinal='15' />
              <column datatype='string' name='Product Name' ordinal='16' />
              <column datatype='real' name='Sales' ordinal='17' />
              <column datatype='integer' name='Quantity' ordinal='18' />
              <column datatype='real' name='Discount' ordinal='19' />
              <column datatype='real' name='Profit' ordinal='20' />
            </columns>
          </relation>
          <relation connection='excel-direct.10qlysu0o38f8a1eznw981yv1ehx' name='Returns' table='[Returns$]' type='table'>
            <columns gridOrigin='A1:B801:no:A1:B801:0' header='yes' outcome='6'>
              <column datatype='string' name='Returned' ordinal='0' />
              <column datatype='string' name='Order ID' ordinal='1' />
            </columns>
          </relation>
        </relation>
        <cols>
          <map key='[Category]' value='[Orders].[Category]' />
          <map key='[City]' value='[Orders].[City]' />
          <map key='[Country/Region]' value='[Orders].[Country/Region]' />
          <map key='[Customer ID]' value='[Orders].[Customer ID]' />
          <map key='[Customer Name]' value='[Orders].[Customer Name]' />
          <map key='[Discount]' value='[Orders].[Discount]' />
          <map key='[Order Date]' value='[Orders].[Order Date]' />
          <map key='[Order ID (Returns)]' value='[Returns].[Order ID]' />
          <map key='[Order ID]' value='[Orders].[Order ID]' />
          <map key='[Postal Code]' value='[Orders].[Postal Code]' />
          <map key='[Product ID]' value='[Orders].[Product ID]' />
          <map key='[Product Name]' value='[Orders].[Product Name]' />
          <map key='[Profit]' value='[Orders].[Profit]' />
          <map key='[Quantity]' value='[Orders].[Quantity]' />
          <map key='[Region]' value='[Orders].[Region]' />
          <map key='[Returned]' value='[Returns].[Returned]' />
          <map key='[Row ID]' value='[Orders].[Row ID]' />
          <map key='[Sales]' value='[Orders].[Sales]' />
          <map key='[Segment]' value='[Orders].[Segment]' />
          <map key='[Ship Date]' value='[Orders].[Ship Date]' />
          <map key='[Ship Mode]' value='[Orders].[Ship Mode]' />
          <map key='[State]' value='[Orders].[State]' />
          <map key='[Sub-Category]' value='[Orders].[Sub-Category]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Orders]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:U9995:no:A1:U9995:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Returns]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B801:no:A1:B801:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Row ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Row ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Row ID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Orders_A188DA8AA194473289750DFD5065D660]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Orders_A188DA8AA194473289750DFD5065D660]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Order Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order Date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <object-id>[Orders_A188DA8AA194473289750DFD5065D660]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Ship Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <object-id>[Orders_A188DA8AA194473289750DFD5065D660]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Mode</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Ship Mode]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Mode</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Orders_A188DA8AA194473289750DFD5065D660]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer ID</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Orders_A188DA8AA194473289750DFD5065D660]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer Name</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Orders_A188DA8AA194473289750DFD5065D660]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Segment</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Segment]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Segment</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Orders_A188DA8AA194473289750DFD5065D660]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country/Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country/Region]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Country/Region</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Orders_A188DA8AA194473289750DFD5065D660]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>130</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Orders_A188DA8AA194473289750DFD5065D660]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Orders_A188DA8AA194473289750DFD5065D660]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Postal Code</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Postal Code]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Postal Code</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Orders_A188DA8AA194473289750DFD5065D660]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Orders_A188DA8AA194473289750DFD5065D660]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product ID</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Orders_A188DA8AA194473289750DFD5065D660]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Category</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Orders_A188DA8AA194473289750DFD5065D660]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sub-Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Sub-Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sub-Category</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Orders_A188DA8AA194473289750DFD5065D660]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product Name</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Orders_A188DA8AA194473289750DFD5065D660]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sales]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sales</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[Orders_A188DA8AA194473289750DFD5065D660]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Quantity</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Quantity]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Quantity</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Orders_A188DA8AA194473289750DFD5065D660]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Discount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Discount]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Discount</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[Orders_A188DA8AA194473289750DFD5065D660]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Profit</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Profit]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Profit</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[Orders_A188DA8AA194473289750DFD5065D660]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Returned</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Returned]</local-name>
            <parent-name>[Returns]</parent-name>
            <remote-alias>Returned</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Orders_A188DA8AA194473289750DFD5065D660]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order ID (Returns)]</local-name>
            <parent-name>[Returns]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Orders_A188DA8AA194473289750DFD5065D660]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Return' datatype='integer' name='[Calculation_673288162860572672]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF ISNULL([Returned]) THEN 0&#13;&#10;ELSE 1&#13;&#10;END' />
      </column>
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[Country/Region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[Customer Name]' role='dimension' type='nominal' />
      <column aggregation='Sum' datatype='integer' default-format='*00000' name='[Postal Code]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
      <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Row ID]' role='dimension' type='ordinal' />
      <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Orders' datatype='table' name='[__tableau_internal_object_id__].[Orders_A188DA8AA194473289750DFD5065D660]' role='measure' type='quantitative' />
      <column-instance column='[Calculation_673288162860572672]' derivation='Avg' name='[avg:Calculation_673288162860572672:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Profit]' derivation='Avg' name='[avg:Profit:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Customer Name]' derivation='None' name='[none:Customer Name:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_673288162860572672]' derivation='Sum' name='[sum:Calculation_673288162860572672:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
      <extract _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' object-id='' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/najwa/AppData/Local/Temp/TableauTemp/#TableauTemp_1ns6hcf1ks2k5l1apoeg304w7bze.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='11/26/2024 01:21:53 AM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <cols>
            <map key='[Category]' value='[Extract].[Category]' />
            <map key='[City]' value='[Extract].[City]' />
            <map key='[Country/Region]' value='[Extract].[Country/Region]' />
            <map key='[Customer ID]' value='[Extract].[Customer ID]' />
            <map key='[Customer Name]' value='[Extract].[Customer Name]' />
            <map key='[Discount]' value='[Extract].[Discount]' />
            <map key='[Order Date]' value='[Extract].[Order Date]' />
            <map key='[Order ID (Returns)]' value='[Extract].[Order ID]' />
            <map key='[Order ID]' value='[Extract].[Order ID1]' />
            <map key='[Postal Code]' value='[Extract].[Postal Code]' />
            <map key='[Product ID]' value='[Extract].[Product ID]' />
            <map key='[Product Name]' value='[Extract].[Product Name]' />
            <map key='[Profit]' value='[Extract].[Profit]' />
            <map key='[Quantity]' value='[Extract].[Quantity]' />
            <map key='[Region]' value='[Extract].[Region]' />
            <map key='[Returned]' value='[Extract].[Returned]' />
            <map key='[Row ID]' value='[Extract].[Row ID]' />
            <map key='[Sales]' value='[Extract].[Sales]' />
            <map key='[Segment]' value='[Extract].[Segment]' />
            <map key='[Ship Date]' value='[Extract].[Ship Date]' />
            <map key='[Ship Mode]' value='[Extract].[Ship Mode]' />
            <map key='[State]' value='[Extract].[State]' />
            <map key='[Sub-Category]' value='[Extract].[Sub-Category]' />
          </cols>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Row ID</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Row ID]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Row ID</remote-alias>
              <ordinal>0</ordinal>
              <family>Orders</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>5142</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Orders_A188DA8AA194473289750DFD5065D660]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Order ID1</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Order ID]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Order ID1</remote-alias>
              <ordinal>1</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3114</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <object-id>[Orders_A188DA8AA194473289750DFD5065D660]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Order Date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[Order Date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Order Date</remote-alias>
              <ordinal>2</ordinal>
              <family>Orders</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>1427</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Orders_A188DA8AA194473289750DFD5065D660]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Ship Date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[Ship Date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Ship Date</remote-alias>
              <ordinal>3</ordinal>
              <family>Orders</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>1505</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Orders_A188DA8AA194473289750DFD5065D660]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Ship Mode</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Ship Mode]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Ship Mode</remote-alias>
              <ordinal>4</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <object-id>[Orders_A188DA8AA194473289750DFD5065D660]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Customer ID</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Customer ID]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Customer ID</remote-alias>
              <ordinal>5</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1143</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <object-id>[Orders_A188DA8AA194473289750DFD5065D660]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Customer Name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Customer Name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Customer Name</remote-alias>
              <ordinal>6</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1143</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <object-id>[Orders_A188DA8AA194473289750DFD5065D660]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Segment</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Segment]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Segment</remote-alias>
              <ordinal>7</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <object-id>[Orders_A188DA8AA194473289750DFD5065D660]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Country/Region</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Country/Region]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Country/Region</remote-alias>
              <ordinal>8</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <object-id>[Orders_A188DA8AA194473289750DFD5065D660]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>City</remote-name>
              <remote-type>129</remote-type>
              <local-name>[City]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>City</remote-alias>
              <ordinal>9</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>583</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <object-id>[Orders_A188DA8AA194473289750DFD5065D660]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>State</remote-name>
              <remote-type>129</remote-type>
              <local-name>[State]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>State</remote-alias>
              <ordinal>10</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>54</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <object-id>[Orders_A188DA8AA194473289750DFD5065D660]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Postal Code</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Postal Code]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Postal Code</remote-alias>
              <ordinal>11</ordinal>
              <family>Orders</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>722</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Orders_A188DA8AA194473289750DFD5065D660]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Region</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Region]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Region</remote-alias>
              <ordinal>12</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <object-id>[Orders_A188DA8AA194473289750DFD5065D660]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Product ID</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Product ID]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Product ID</remote-alias>
              <ordinal>13</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2226</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <object-id>[Orders_A188DA8AA194473289750DFD5065D660]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Category</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Category]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Category</remote-alias>
              <ordinal>14</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <object-id>[Orders_A188DA8AA194473289750DFD5065D660]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Sub-Category</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Sub-Category]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Sub-Category</remote-alias>
              <ordinal>15</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>17</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <object-id>[Orders_A188DA8AA194473289750DFD5065D660]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Product Name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Product Name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Product Name</remote-alias>
              <ordinal>16</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2211</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <object-id>[Orders_A188DA8AA194473289750DFD5065D660]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Sales</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Sales]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Sales</remote-alias>
              <ordinal>17</ordinal>
              <family>Orders</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3405</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Orders_A188DA8AA194473289750DFD5065D660]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Quantity</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Quantity]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Quantity</remote-alias>
              <ordinal>18</ordinal>
              <family>Orders</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>14</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Orders_A188DA8AA194473289750DFD5065D660]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Discount</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Discount]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Discount</remote-alias>
              <ordinal>19</ordinal>
              <family>Orders</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>16</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Orders_A188DA8AA194473289750DFD5065D660]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Profit</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Profit]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Profit</remote-alias>
              <ordinal>20</ordinal>
              <family>Orders</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>4110</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Orders_A188DA8AA194473289750DFD5065D660]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Returned</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Returned]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Returned</remote-alias>
              <ordinal>21</ordinal>
              <family>Returns</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <object-id>[Orders_A188DA8AA194473289750DFD5065D660]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Order ID</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Order ID (Returns)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Order ID</remote-alias>
              <ordinal>22</ordinal>
              <family>Returns</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>279</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <object-id>[Orders_A188DA8AA194473289750DFD5065D660]</object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1pp1z5p19awkeq1cp8rvy0iejvcm].[avg:Calculation_673288162860572672:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1pp1z5p19awkeq1cp8rvy0iejvcm].[sum:Calculation_673288162860572672:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1pp1z5p19awkeq1cp8rvy0iejvcm].[avg:Profit:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1pp1z5p19awkeq1cp8rvy0iejvcm].[sum:Profit:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1pp1z5p19awkeq1cp8rvy0iejvcm].[sum:Sales:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Customer Name:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Adrian Shami&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Alyssa Tate&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Annie Thurman&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Barry Gonzalez&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Bill Eplett&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Brian Derr&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Carlos Soltero&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Chris Selesnick&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Clay Cheatham&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Dan Campbell&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;David Kendrick&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Dianna Arnett&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Edward Becker&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Erin Creighton&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Fred Harton&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Greg Guthrie&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Henia Zydlo&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Janet Martin&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Jesus Ocampo&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;John Lucas&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Justin Deggeller&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kean Nguyen&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Larry Hughes&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Liz Carlisle&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Maribeth Dona&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Matthew Grinstein&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Michael Oakman&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Monica Federle&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Nick Radford&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Patrick O&apos;Brill&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Philip Brown&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Richard Eichhorn&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Roland Murray&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sample Company A&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sean Wendt&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Stephanie Phelps&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Suzanne McNair&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Tim Brockman&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Tracy Poddar&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Xylona Preis&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Aaron Bergman&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Alex Avila&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ann Chong&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Arthur Prichep&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Benjamin Farhat&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bradley Nguyen&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Candace McMahon&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chad Sievert&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chuck Clark&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Craig Reiter&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Darrin Sayre&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Denise Leinenbach&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Doug Jacobs&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Eric Barreto&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Frank Atkinson&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;George Bell&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Harold Ryan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jack Lebron&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jennifer Halladay&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Joe Kamberova&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Joy Smith&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Katharine Harms&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ken Heidel&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Linda Cazamias&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lycoris Saunders&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;MaryBeth Skach&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Melanie Seite&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mike Caudle&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Nathan Gelder&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Olvera Toch&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Pauline Webber&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Randy Bradley&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Rob Williams&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Russell D&apos;Ascenzo&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Scot Coram&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Shui Tom&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sue Ann Reed&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Theone Pippenger&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Tom Stivers&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Victoria Brennan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Adam Hart&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Allen Armold&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Anna Gayman&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Barbara Fisher&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Beth Fritzler&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Brendan Murry&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Carl Ludwig&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Charlotte Melton&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cindy Schnelling&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cynthia Delaney&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Dave Kipp&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Dennis Pardue&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Duane Noonan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Erica Hackney&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Frank Merwin&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Giulietta Dortch&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Heather Kirkland&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Jamie Frazer&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Jeremy Farry&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;John Dryer&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Juliana Krohn&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Katherine Nockton&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kristen Hastings&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Lindsay Williams&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Marc Harrigan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Matt Collister&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Michael Granlund&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mike Vittorini&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Neil Knudson&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Patricia Hirasaki&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Pete Takahito&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Resi Pölking&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Robert Waldorf&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sally Knutson&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sean Braxton&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sonia Sunley&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Susan Gilcrest&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Thomas Brumley&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tony Sayre&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Vivek Grady&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Alan Haines&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Andrew Gjertsen&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Anthony Johnson&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bart Pistole&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bill Tyler&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Brooke Gillingham&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Caroline Jumper&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Christine Abelman&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Corey Catlett&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Daniel Byrd&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Dean Braden&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Don Jones&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Eleni McCrary&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Eugene Barchas&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Gary Hansen&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Greg Tran&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Hilary Holden&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Jason Gross&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Jim Epp&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Jonathan Howell&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Justin Ritter&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Keith Herrera&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Laurel Elliston&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Liz Thompson&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Maris LaWare&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Maurice Satty&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Michelle Ellison&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Nancy Lomonaco&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Nicole Hansen&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Paul Knutson&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Phillip Breyer&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Rick Huthwaite&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Ross DeVincentis&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sanjit Engle&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Shahid Shariari&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Steve Nguyen&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tamara Manning&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Toby Gnade&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Trudy Brown&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Zuschuss Donatelli&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Aimee Bixby&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Amy Cox&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Annie Zypern&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Barry Pond&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bill Overfelt&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Brian Moss&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Carol Adams&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Christina Anderson&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Clay Ludtke&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Dan Lawera&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;David Philippe&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Dianna Vittorini&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Edward Hooks&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Erin Mull&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Fred Hopkins&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Greg Hansen&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Henry Goldwyn&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Janet Molinari&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jill Fjeld&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;John Murray&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Justin Ellison&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kean Takahito&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Larry Tron&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Liz MacKendrick&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Maribeth Schnelling&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Maureen Fritzler&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Michael Paige&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Muhammed Lee&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Nick Zandusky&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Patrick O&apos;Donnell&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Philip Fox&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Rick Bensley&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Roland Schwarz&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sandra Flanagan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Seth Vernon&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Stephanie Ulpright&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sylvia Foulston&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tim Taslimi&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tracy Zic&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Yana Sorensen&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Adam Shillingsburg&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Allen Goldenen&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Anna Häberlin&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Barry Blumstein&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Beth Paige&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Brendan Sweed&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Carl Weiss&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Chloris Kastensmidt&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cindy Stewart&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cynthia Voltz&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Dave Poirier&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Denny Blanton&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ed Braxton&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Erica Hernandez&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Frank Olsen&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Giulietta Weimer&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Helen Abelman&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Jamie Kunitz&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Jeremy Lonsdale&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;John Grady&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Julie Creighton&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Katrina Bavinger&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kristina Nunn&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Lisa DeCherney&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Maria Bertelson&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Matt Connell&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Michael Kennedy&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mitch Gastineau&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Neola Schneider&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Patrick Bzostek&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Peter Bühler&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ricardo Emerson&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Roger Barcio&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sally Matthias&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sean Christensen&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Speros Goranitis&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Susan MacKendrick&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Thomas Seio&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Tracy Blumstein&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Vivek Sundaresam&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Alejandro Savely&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Angele Hood&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Art Foster&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ben Peterman&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Brad Thomas&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bryan Mills&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Chad Cunningham&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Christopher Schild&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Craig Leslie&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Darren Powers&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Deirdre Greer&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Dorris liebe&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Emily Grady&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Evan Minnotte&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Gene McClure&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Harold Engle&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ivan Liston&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Jennifer Braxton&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Jocasta Rupert&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Joy Bell-&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Karen Seio&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ken Brennan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lena Hernandez&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Luke Schmidt&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Mary O&apos;Rourke&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Meg O&apos;Connel&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Mick Crebagga&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Natalie Webber&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Nora Preis&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Pauline Chand&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ralph Kennedy&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Rob Haberlin&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ruben Dartt&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sarah Foster&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Shirley Jackson&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Stuart Calhoun&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Thea Hendricks&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Tom Boeckenhauer&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Vicky Freymann&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Aaron Hawkins&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Alex Grayson&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ann Steele&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Arthur Wiediger&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Benjamin Patterson&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bradley Talbott&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Cari Sayre&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Charles Crestani&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Chuck Magee&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Craig Yedwab&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Darrin Van Huff&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Denise Monton&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Doug O&apos;Connell&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Eric Hoffmann&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Frank Carlisle&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;George Zrebassa&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Harry Greene&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Jack O&apos;Briant&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Jennifer Jackson&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Joel Eaton&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Julia Barnett&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Katherine Ducich&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ken Lonsdale&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Linda Southworth&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lynn Smith&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mathew Reese&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Michael Chen&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mike Gockenbach&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Nathan Mautz&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Pamela Coakley&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Penelope Sewall&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Randy Ferguson&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Robert Barroso&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ryan Akin&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Scot Wooten&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sibella Parks&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sung Chung&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Theresa Coyne&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tonja Turnell&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Victoria Pisteka&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Alejandro Ballentine&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Andy Yotov&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Arianne Irving&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Becky Pak&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Brad Eason&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bruce Stewart&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cathy Hwang&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Christopher Conant&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Craig Carreira&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Darren Budd&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Deborah Brumfield&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Dorothy Dickinson&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Emily Burns&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Evan Bailliet&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Gary Zandusky&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Hallie Redmond&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Irene Maddox&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Jay Kimmel&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Jim Radford&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Joseph Airdo&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Karen Daniels&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kelly Williams&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lena Cacioppo&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lori Olson&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mark Packer&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Maxwell Schwartz&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Michelle Tran&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Natalie DeCherney&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Nora Paige&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Paul Stevenson&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Rachel Payne&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Rob Beeghly&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Roy Skaria&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sarah Bern&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sheri Gordon&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Stewart Carmichael&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ted Trevino&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Todd Sumrall&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Valerie Mitchum&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Adrian Barton&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Allen Rosenblatt&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Anne McFarland&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Barry Franz&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Beth Thompson&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Brian Dahlen&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Carlos Daly&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Chris Cortes&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Claire Gute&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cyra Reiten&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;David Bremer&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Denny Joy&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ed Jacobs&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Erica Smith&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Frank Preis&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Grace Kelly&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Helen Andreada&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Jane Waco&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Jeremy Pistek&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;John Huston&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Julie Kriz&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Katrina Edelman&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kunst Miller&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Lisa Hazard&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Maria Etezadi&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Matt Hagelstein&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Michael Moore&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mitch Webber&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Neoma Murray&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Patrick Gardner&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Peter Fuller&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ricardo Sperren&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Roger Demir&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sam Craven&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sean Miller&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Stefania Perrino&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Susan Pistek&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Thomas Thornton&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Tracy Collins&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Vivian Mathis&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Alan Hwang&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Andrew Roberts&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Anthony O&apos;Donnell&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bart Watters&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bobby Elias&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Brosina Hoffman&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cassandra Brandow&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Christine Kargatis&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Corey Roper&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Daniel Lacy&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Dean Katz&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Don Miller&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Elizabeth Moffitt&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Eugene Hildebrand&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Gary Hwang&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Guy Armstrong&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Hunter Glantz&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Jason Klamczynski&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Jim Karlsson&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Joni Blumstein&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kalyca Meade&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kelly Andreada&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Laurel Workman&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Liz Willingham&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mark Cousins&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Max Engle&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Michelle Huthwaite&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Naresj Patel&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Noah Childs&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Paul Lucas&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Phillip Flathmann&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Rick Reed&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Roy Collins&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sanjit Jacobs&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sharelle Roach&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Steven Cartwright&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tamara Willingham&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Toby Ritter&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Trudy Glocke&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Alan Schoenberger&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Andy Gerbode&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Anthony Rawles&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Becky Castell&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bobby Odegard&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bruce Degenhardt&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Catherine Glotzbach&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Christine Phan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Corey-Lock&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Daniel Raglin&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Dean percer&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Don Weiss&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Ellis Ballard&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Eugene Moren&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Gary McGarr&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Guy Phonely&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Hunter Lopez&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Jasper Cacioppo&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Jim Kriz&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Joni Sundaresam&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Karen Bern&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kelly Collister&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lauren Leatherbury&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Logan Currie&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mark Haberlin&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Max Jones&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Michelle Lonsdale&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Nat Carroll&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Noel Staavos&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Paul MacIntyre&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Pierre Wener&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Rick Wilson&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Roy Französisch&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Saphhira Shifley&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Shaun Chance&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Steven Roelle&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tanja Norvell&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Toby Swindell&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Trudy Schmidt&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Alejandro Grove&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Anemone Ratner&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Art Ferguson&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ben Ferrer&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Brad Norvell&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bryan Davis&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cathy Prescott&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Christopher Martinez&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Craig Carroll&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Darren Koutras&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Debra Catini&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Dorothy Wardle&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Emily Ducich&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Evan Henry&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Gene Hale&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Harold Dahlen&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ivan Gibson&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Jenna Caffey&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Jim Sink&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Joseph Holt&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Karen Ferguson&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ken Black&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lena Creighton&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Luke Foster&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mark Van Huff&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Maya Herman&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mick Brown&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Natalie Fritzler&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Nora Pelletier&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Paul Van Hugh&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ralph Arnett&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Rob Dowd&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ruben Ausman&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sarah Brown&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Shirley Daniels&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Stewart Visinsky&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Thais Sissman&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Tom Ashbrook&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Valerie Takahito&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Aleksandra Gannaway&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ann Blume&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Arthur Gainer&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ben Wallace&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bradley Drucker&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bryan Spruell&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Chad McGuire&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Christy Brittain&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Craig Molinari&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Darrin Martin&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Delfina Latchford&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Doug Bickford&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Emily Phan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Filia McAdams&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;George Ashbrook&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Harold Pawlan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Jack Garza&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Jennifer Ferguson&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Joe Elijah&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Joy Daniels&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Karl Braun&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ken Dana&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Lena Radford&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Luke Weiss&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Mary Zewe&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Meg Tillman&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Mick Hernandez&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Nathan Cano&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Odella Nelson&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Pauline Johnson&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ralph Ritter&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Rob Lucas&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Russell Applegate&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sarah Jordon&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Shirley Schmidt&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Stuart Van&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Thea Hudgings&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Tom Prescott&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Victor Preis&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Alan Barnes&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Amy Hunt&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Anthony Garverick&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Barry Weirich&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bill Shonely&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Brian Stugart&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Carol Darley&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Christina DeMoss&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Clay Rozendal&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Dan Reichenbach&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;David Smith&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Dianna Wilson&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Edward Nazzal&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Erin Smith&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Fred McMath&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Greg Matthias&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Henry MacAllister&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Jas O&apos;Carroll&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Jill Matthias&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;John Stevenson&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Justin Hirsh&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kean Thornton&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Laura Armstrong&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Liz Pelletier&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Maribeth Yedwab&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Maureen Gastineau&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Michael Stewart&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Muhammed MacIntyre&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Nicole Brennan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Patrick Ryan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Philisse Overcash&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Rick Duston&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Rose O&apos;Brian&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sandra Glassco&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Shahid Collister&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Steve Carroll&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tamara Chand&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Toby Braunhardt&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Troy Blackwell&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Yoseph Carroll&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Adrian Hane&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Alyssa Crouse&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Anne Pryor&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Barry Französisch&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bill Donatelli&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Brian DeCherney&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Carlos Meador&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Chris McAfee&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Claudia Bergmann&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Damala Kotsonis&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;David Flashing&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Denny Ordway&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ed Ludwig&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Erin Ashbrook&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Fred Chung&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Grant Thornton&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Helen Wasserman&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Janet Lee&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Jessica Myrick&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;John Lee&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Julie Prescott&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Katrina Willman&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Larry Blacks&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Lisa Ryan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Maria Zettner&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Matthew Clasen&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Michael Nguyen&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mitch Willingham&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Nick Crebassa&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Patrick Jones&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Peter McVee&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Richard Bierner&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Roland Fjeld&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sam Zeldin&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sean O&apos;Donnell&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Stefanie Holloman&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Susan Vittorini&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Tiffany House&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Tracy Hopkins&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;William Brown&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Aaron Smayling&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Alex Russell&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Anna Andreadi&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ashley Jarboe&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Benjamin Venier&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Brenda Bowman&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Cari Schnelling&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Charles McCrossin&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chuck Sachs&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Cyma Kinney&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Dave Brooks&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Dennis Bolton&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Duane Benoit&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Eric Murdock&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Frank Gastineau&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Georgia Rosenberg&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Harry Marie&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;James Galang&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jennifer Patt&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Joel Jenkins&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Julia Dunbar&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Katherine Hughes&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Khloe Miller&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lindsay Castell&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Magdelene Morse&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Matt Abelman&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Michael Dominguez&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mike Kennedy&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Neil Ducich&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Pamela Stobb&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Pete Armstrong&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Raymond Buch&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Robert Dilbeck&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ryan Crowe&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Scott Cohen&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Skye Norling&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Sung Pak&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Theresa Swint&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Tony Chapman&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Victoria Wilson&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Alan Shonely&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Andy Reiter&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Anthony Witt&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Becky Martin&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bobby Trafton&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bruce Geld&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cathy Armstrong&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Christine Sundaresam&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Corinna Mitchell&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Dario Medina&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Deanra Eno&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Dorothy Badders&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Elpida Rittenbach&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Eva Jacobs&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Gary Mitchum&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Guy Thornton&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ionia McGrath&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Jay Fein&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Jim Mitchum&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Joni Wasserman&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Karen Carlisle&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kelly Lampkin&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Lela Donovan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Logan Haushalter&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mark Hamilton&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Max Ludwig&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Michelle Moray&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Nat Gilpin&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Nona Balk&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Paul Prost&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Quincy Jones&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ritsa Hightower&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Roy Phan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sara Luxemburg&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Shaun Weien&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Steven Ward&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ted Butterfield&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Todd Boyes&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Valerie Dominguez&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Alan Dominguez&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Andrew Allen&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Anthony Jacobs&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bart Folk&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bill Stewart&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Brian Thompson&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Carol Triggs&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Christina VanderZanden&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Clytie Kelty&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Dana Kaydos&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;David Wiener&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Dionis Lloyd&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Eileen Kiefer&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Eudokia Martin&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Fred Wasserman&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Greg Maxwell&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Herbert Flentye&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Jason Fortune-&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Jill Stevenson&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Jonathan Doherty&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Justin MacKendrick&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Keith Dawkins&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Laurel Beltran&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Liz Preis&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Marina Lichtenstein&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Maureen Gnade&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Michelle Arnett&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Muhammed Yedwab&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Nicole Fjeld&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Paul Gonzalez&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Phillina Ober&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Rick Hansen&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ross Baird&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sanjit Chand&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Shahid Hopkins&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Steve Chapman&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tamara Dahlen&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Toby Carlisle&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Troy Staebel&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Zuschuss Carroll&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Adam Bellavance&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Alice McCarthy&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Anna Chung&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Astrea Jones&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Berenike Kampe&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Brendan Dodson&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Carl Jackson&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Charles Sheldon&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cindy Chapman&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cynthia Arntzen&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Dave Hallsten&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Dennis Kane&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Duane Huffman&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Erica Bern&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Frank Hawley&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Giulietta Baptist&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Heather Jas&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;James Lanier&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Jeremy Ellison&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;John Castell&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Julia West&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Katherine Murray&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kimberly Carter&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Lindsay Shagiari&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Marc Crier&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Matt Collins&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Michael Grace&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mike Pelletier&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Neil Französisch&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Parhena Norris&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Pete Kriz&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Raymond Messe&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Robert Marley&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sally Hughsby&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Scott Williamson&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sonia Cooley&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sung Shariari&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Thomas Boland&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tony Molinari&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Vivek Gonzalez&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <object-graph>
        <objects>
          <object caption='Orders' id='Orders_A188DA8AA194473289750DFD5065D660'>
            <properties context=''>
              <relation join='left' type='join'>
                <clause type='join'>
                  <expression op='='>
                    <expression op='[Orders].[Order ID]' />
                    <expression op='[Returns].[Order ID]' />
                  </expression>
                </clause>
                <relation connection='excel-direct.10qlysu0o38f8a1eznw981yv1ehx' name='Orders' table='[Orders$]' type='table'>
                  <columns gridOrigin='A1:U9995:no:A1:U9995:0' header='yes' outcome='6'>
                    <column datatype='integer' name='Row ID' ordinal='0' />
                    <column datatype='string' name='Order ID' ordinal='1' />
                    <column datatype='date' name='Order Date' ordinal='2' />
                    <column datatype='date' name='Ship Date' ordinal='3' />
                    <column datatype='string' name='Ship Mode' ordinal='4' />
                    <column datatype='string' name='Customer ID' ordinal='5' />
                    <column datatype='string' name='Customer Name' ordinal='6' />
                    <column datatype='string' name='Segment' ordinal='7' />
                    <column datatype='string' name='Country/Region' ordinal='8' />
                    <column datatype='string' name='City' ordinal='9' />
                    <column datatype='string' name='State' ordinal='10' />
                    <column datatype='integer' name='Postal Code' ordinal='11' />
                    <column datatype='string' name='Region' ordinal='12' />
                    <column datatype='string' name='Product ID' ordinal='13' />
                    <column datatype='string' name='Category' ordinal='14' />
                    <column datatype='string' name='Sub-Category' ordinal='15' />
                    <column datatype='string' name='Product Name' ordinal='16' />
                    <column datatype='real' name='Sales' ordinal='17' />
                    <column datatype='integer' name='Quantity' ordinal='18' />
                    <column datatype='real' name='Discount' ordinal='19' />
                    <column datatype='real' name='Profit' ordinal='20' />
                  </columns>
                </relation>
                <relation connection='excel-direct.10qlysu0o38f8a1eznw981yv1ehx' name='Returns' table='[Returns$]' type='table'>
                  <columns gridOrigin='A1:B801:no:A1:B801:0' header='yes' outcome='6'>
                    <column datatype='string' name='Returned' ordinal='0' />
                    <column datatype='string' name='Order ID' ordinal='1' />
                  </columns>
                </relation>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Correlation between Total Sales and Total Returns.'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Superstore (1))' name='federated.1pp1z5p19awkeq1cp8rvy0iejvcm' />
          </datasources>
          <datasource-dependencies datasource='federated.1pp1z5p19awkeq1cp8rvy0iejvcm'>
            <column caption='Return' datatype='integer' name='[Calculation_673288162860572672]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF ISNULL([Returned]) THEN 0&#13;&#10;ELSE 1&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Returned]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_673288162860572672]' derivation='Sum' name='[sum:Calculation_673288162860572672:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1pp1z5p19awkeq1cp8rvy0iejvcm].[none:Sub-Category:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1pp1z5p19awkeq1cp8rvy0iejvcm].[sum:Calculation_673288162860572672:qk]</rows>
        <cols>[federated.1pp1z5p19awkeq1cp8rvy0iejvcm].[sum:Sales:qk]</cols>
      </table>
      <simple-id uuid='{A412E6F0-3309-4CD4-946F-5DC760109047}' />
    </worksheet>
    <worksheet name='Returns by Customer'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Superstore (1))' name='federated.1pp1z5p19awkeq1cp8rvy0iejvcm' />
          </datasources>
          <datasource-dependencies datasource='federated.1pp1z5p19awkeq1cp8rvy0iejvcm'>
            <column caption='Return' datatype='integer' name='[Calculation_673288162860572672]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF ISNULL([Returned]) THEN 0&#13;&#10;ELSE 1&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Customer Name]' role='dimension' type='nominal' />
            <column datatype='string' name='[Returned]' role='dimension' type='nominal' />
            <column-instance column='[Customer Name]' derivation='None' name='[none:Customer Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_673288162860572672]' derivation='Sum' name='[sum:Calculation_673288162860572672:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1pp1z5p19awkeq1cp8rvy0iejvcm].[none:Customer Name:nk]'>
            <groupfilter expression='SUM([Calculation_673288162860572672]) &gt; 1' function='filter' user:ui-filter-by-field='true' user:ui-marker='filter-by'>
              <groupfilter function='level-members' level='[none:Customer Name:nk]' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-manual-selection-is-empty='true' user:ui-marker='enumerate' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1pp1z5p19awkeq1cp8rvy0iejvcm].[none:Customer Name:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1pp1z5p19awkeq1cp8rvy0iejvcm].[sum:Calculation_673288162860572672:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.1pp1z5p19awkeq1cp8rvy0iejvcm].[none:Customer Name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1pp1z5p19awkeq1cp8rvy0iejvcm].[none:Customer Name:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1pp1z5p19awkeq1cp8rvy0iejvcm].[sum:Calculation_673288162860572672:qk]</rows>
        <cols>[federated.1pp1z5p19awkeq1cp8rvy0iejvcm].[none:Customer Name:nk]</cols>
      </table>
      <simple-id uuid='{20E1E689-415D-4E2F-8299-980119E62636}' />
    </worksheet>
    <worksheet name='Returns by Month'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Superstore (1))' name='federated.1pp1z5p19awkeq1cp8rvy0iejvcm' />
          </datasources>
          <datasource-dependencies datasource='federated.1pp1z5p19awkeq1cp8rvy0iejvcm'>
            <column caption='Return' datatype='integer' name='[Calculation_673288162860572672]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF ISNULL([Returned]) THEN 0&#13;&#10;ELSE 1&#13;&#10;END' />
            </column>
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Returned]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_673288162860572672]' derivation='Avg' name='[avg:Calculation_673288162860572672:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Month' name='[mn:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1pp1z5p19awkeq1cp8rvy0iejvcm].[avg:Calculation_673288162860572672:qk]</rows>
        <cols>[federated.1pp1z5p19awkeq1cp8rvy0iejvcm].[mn:Order Date:ok]</cols>
      </table>
      <simple-id uuid='{07ACDAD6-DF4E-48DD-8D83-BD8C8FCBAC52}' />
    </worksheet>
    <worksheet name='Returns by Product Category'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Superstore (1))' name='federated.1pp1z5p19awkeq1cp8rvy0iejvcm' />
          </datasources>
          <datasource-dependencies datasource='federated.1pp1z5p19awkeq1cp8rvy0iejvcm'>
            <column caption='Return' datatype='integer' name='[Calculation_673288162860572672]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF ISNULL([Returned]) THEN 0&#13;&#10;ELSE 1&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[Returned]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_673288162860572672]' derivation='Avg' name='[avg:Calculation_673288162860572672:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1pp1z5p19awkeq1cp8rvy0iejvcm].[avg:Calculation_673288162860572672:qk]</rows>
        <cols>[federated.1pp1z5p19awkeq1cp8rvy0iejvcm].[none:Category:nk]</cols>
      </table>
      <simple-id uuid='{50CEAE92-6872-4BA5-886D-017F613CEEEA}' />
    </worksheet>
    <worksheet name='Returns by State Map'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Superstore (1))' name='federated.1pp1z5p19awkeq1cp8rvy0iejvcm' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1pp1z5p19awkeq1cp8rvy0iejvcm'>
            <column caption='Return' datatype='integer' name='[Calculation_673288162860572672]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF ISNULL([Returned]) THEN 0&#13;&#10;ELSE 1&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Returned]' role='dimension' type='nominal' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Calculation_673288162860572672]' derivation='Avg' name='[avg:Calculation_673288162860572672:qk]' pivot='key' type='quantitative' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1pp1z5p19awkeq1cp8rvy0iejvcm].[Longitude (generated)]' field-type='quantitative' max='-4787948.3046526387' min='-15152073.600788467' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1pp1z5p19awkeq1cp8rvy0iejvcm].[Latitude (generated)]' field-type='quantitative' max='6874393.3080949308' min='1507028.5147721181' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='annotation'>
            <format attr='line-end' id='annotation_0' value='arrow' />
            <format attr='stroke-color' id='annotation_0' value='#000000' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1pp1z5p19awkeq1cp8rvy0iejvcm].[none:State:nk]' />
              <lod column='[federated.1pp1z5p19awkeq1cp8rvy0iejvcm].[none:State:nk]' />
              <color column='[federated.1pp1z5p19awkeq1cp8rvy0iejvcm].[avg:Calculation_673288162860572672:qk]' />
              <geometry column='[federated.1pp1z5p19awkeq1cp8rvy0iejvcm].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1pp1z5p19awkeq1cp8rvy0iejvcm].[Latitude (generated)]</rows>
        <cols>[federated.1pp1z5p19awkeq1cp8rvy0iejvcm].[Longitude (generated)]</cols>
        <annotations>
          <annotation class='point' id='0' mark-position='1' pullback='12' text-width='150'>
            <formatted-text>
              <run fontcolor='#787878'>State: </run>
              <run bold='true'><![CDATA[<[federated.1pp1z5p19awkeq1cp8rvy0iejvcm].[none:State:nk]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Avg. Return: </run>
              <run bold='true'><![CDATA[<[federated.1pp1z5p19awkeq1cp8rvy0iejvcm].[avg:Calculation_673288162860572672:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1pp1z5p19awkeq1cp8rvy0iejvcm].[Longitude (generated)]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1pp1z5p19awkeq1cp8rvy0iejvcm].[Latitude (generated)]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1pp1z5p19awkeq1cp8rvy0iejvcm].[avg:Calculation_673288162860572672:qk]</field>
                      <field>[federated.1pp1z5p19awkeq1cp8rvy0iejvcm].[none:State:nk]</field>
                      <field>[federated.1pp1z5p19awkeq1cp8rvy0iejvcm].[Geometry (generated)]</field>
                      <field>[federated.1pp1z5p19awkeq1cp8rvy0iejvcm].[Latitude (generated)]</field>
                      <field>[federated.1pp1z5p19awkeq1cp8rvy0iejvcm].[Longitude (generated)]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>0.56842105263157894</value>
                    <value>&quot;Utah&quot;</value>
                    <value>&quot;POLYGON((-114.0506 37.0004,-114.0525 37.6048,-114.0497 37.8236,-114.0502 38.5729,-114.0477 39.5427,-114.0467 40.1169,-114.0421 40.9999,-114.0396 41.8848,-114.0417 41.9937,-113.8933 41.9881,-113.0008 41.9983,-112.193 42.0012,-112.1095 41.9976,-111.5073 41.9995,-111.0467 42.0016,-111.0458 41.5798,-111.0467 40.998,-110.2379 40.9954,-110.0007 40.9974,-109.0501 41.0007,-109.0482 40.6536,-109.0508 40.2227,-109.0514 39.4977,-109.0508 39.3667,-109.0542 38.875,-109.0595 38.7199,-109.0601 38.2755,-109.0421 38.153,-109.0415 37.8812,-109.0435 37.4847,-109.0458 37.375,-109.0452 36.9991,-110.0007 36.998,-110.4702 36.998,-110.509 37.004,-111.2783 37.0005,-111.4128 37.0015,-112.8994 37.0004,-114.0506 37.0004))&quot;</value>
                    <value>39.25</value>
                    <value>-111.75</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-113' y='131' />
          </annotation>
        </annotations>
      </table>
      <simple-id uuid='{0A1F4A8F-1817-4750-A3AC-E92C92AB8ED7}' />
    </worksheet>
    <worksheet name='Returns by State by Month'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Superstore (1))' name='federated.1pp1z5p19awkeq1cp8rvy0iejvcm' />
          </datasources>
          <datasource-dependencies datasource='federated.1pp1z5p19awkeq1cp8rvy0iejvcm'>
            <column caption='Return' datatype='integer' name='[Calculation_673288162860572672]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF ISNULL([Returned]) THEN 0&#13;&#10;ELSE 1&#13;&#10;END' />
            </column>
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Returned]' role='dimension' type='nominal' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Calculation_673288162860572672]' derivation='Avg' name='[avg:Calculation_673288162860572672:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Month' name='[mn:Order Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1pp1z5p19awkeq1cp8rvy0iejvcm].[none:State:nk]'>
            <groupfilter expression='AVG([Calculation_673288162860572672]) &gt; 0.' function='filter' user:ui-filter-by-field='true' user:ui-marker='filter-by'>
              <groupfilter function='level-members' level='[none:State:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1pp1z5p19awkeq1cp8rvy0iejvcm].[mn:Order Date:ok]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1pp1z5p19awkeq1cp8rvy0iejvcm].[avg:Calculation_673288162860572672:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.1pp1z5p19awkeq1cp8rvy0iejvcm].[none:State:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.1pp1z5p19awkeq1cp8rvy0iejvcm].[avg:Calculation_673288162860572672:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
          </pane>
        </panes>
        <rows>[federated.1pp1z5p19awkeq1cp8rvy0iejvcm].[avg:Calculation_673288162860572672:qk]</rows>
        <cols>([federated.1pp1z5p19awkeq1cp8rvy0iejvcm].[none:State:nk] / [federated.1pp1z5p19awkeq1cp8rvy0iejvcm].[mn:Order Date:ok])</cols>
      </table>
      <simple-id uuid='{0825F099-2CB0-48A7-813D-03FC18FD2221}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard enable-sort-zone-taborder='true' name='Dashboard 2'>
      <style />
      <size maxheight='768' maxwidth='1024' minheight='768' minwidth='1024' preset-index='2' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone forceUpdate='true' h='97916' id='3' is-centered='0' is-scaled='1' param='C:/Users/najwa/Downloads/OIP.jpg' type-v2='bitmap' w='98438' x='781' y='1042'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='8' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='97916' id='7' param='vert' type-v2='layout-flow' w='98438' x='781' y='1042'>
                <zone fixed-size='280' forceUpdate='true' h='97916' id='3' is-centered='0' is-fixed='true' is-scaled='1' param='C:/Users/najwa/Downloads/OIP.jpg' type-v2='bitmap' w='98438' x='781' y='1042'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{C0BE10DE-37F4-4531-88D9-83676E58D4E4}' />
    </dashboard>
    <dashboard enable-sort-zone-taborder='true' name='Dashboard 3'>
      <style />
      <size maxheight='768' maxwidth='1024' minheight='768' minwidth='1024' preset-index='2' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='97916' id='3' is-centered='0' is-scaled='1' param='C:/Users/najwa/Downloads/any-questions-png-3.jpg' type-v2='bitmap' w='98438' x='781' y='1042'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='8' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='97916' id='7' param='vert' type-v2='layout-flow' w='98438' x='781' y='1042'>
                <zone fixed-size='280' h='97916' id='3' is-centered='0' is-fixed='true' is-scaled='1' param='C:/Users/najwa/Downloads/any-questions-png-3.jpg' type-v2='bitmap' w='98438' x='781' y='1042'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{507BF046-7B23-472B-939F-D650B5748B01}' />
    </dashboard>
    <dashboard enable-sort-zone-taborder='true' name='Monitoring Returns'>
      <style />
      <size maxheight='768' maxwidth='1024' minheight='768' minwidth='1024' preset-index='2' sizing-mode='fixed' />
      <datasources>
        <datasource caption='Orders+ (Superstore (1))' name='federated.1pp1z5p19awkeq1cp8rvy0iejvcm' />
      </datasources>
      <datasource-dependencies datasource='federated.1pp1z5p19awkeq1cp8rvy0iejvcm'>
        <column datatype='string' name='[Customer Name]' role='dimension' type='nominal' />
        <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
        <column-instance column='[Customer Name]' derivation='None' name='[none:Customer Name:nk]' pivot='key' type='nominal' />
        <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='97916' id='42' param='vert' type-v2='layout-flow' w='98438' x='781' y='1042'>
            <zone h='5469' id='43' type-v2='title' w='98438' x='781' y='1042'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='92447' id='30' param='horz' type-v2='layout-flow' w='98438' x='781' y='6511'>
              <zone h='92447' id='16' param='vert' type-v2='layout-flow' w='82813' x='781' y='6511'>
                <zone h='92447' id='14' type-v2='layout-basic' w='82813' x='781' y='6511'>
                  <zone h='25758' id='6' param='vert' type-v2='layout-flow' w='41602' x='781' y='73200'>
                    <zone h='25498' id='33' name='Returns by Customer' w='41406' x='879' y='73330'>
                      <layout-cache minheight='200' type-h='scalable' type-w='fixed' />
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='solid' />
                      <format attr='border-width' value='1' />
                    </zone-style>
                  </zone>
                  <zone h='25618' id='7' param='horz' type-v2='layout-flow' w='41602' x='781' y='6511'>
                    <zone forceUpdate='true' h='25618' id='20' type-v2='text' w='41602' x='781' y='6511'>
                      <formatted-text>
                        <run fontsize='10'>Use the following visualization to help understand the monitoring of returns in terms of </run>
                        <run fontname='Suisse Intl' fontsize='10'>what is causing customers to return their orders.</run>
                        <run>Æ&#10;</run>
                        <run bold='true' fontcolor='#555555' fontname='Suisse Intl' fontsize='10'>-Correlation between Total sales and Total Returns (Below)</run>
                        <run>Æ&#10;</run>
                        <run bold='true' fontcolor='#555555' fontname='Suisse Intl' fontsize='10'>-Returns by Category (Bottom Middle)</run>
                        <run>Æ&#10;</run>
                        <run bold='true' fontcolor='#555555' fontname='Suisse Intl' fontsize='10'>-Returns b Customer (Bottom Left)</run>
                        <run>Æ&#10;</run>
                        <run bold='true' fontcolor='#555555' fontname='Suisse Intl' fontsize='10'>-Returns by State (Top Right)</run>
                        <run>Æ&#10;</run>
                        <run bold='true' fontcolor='#555555' fontname='Suisse Intl' fontsize='10'>-Returns by Month (Right Middle)</run>
                        <run>Æ&#10;</run>
                        <run bold='true' fontcolor='#555555' fontname='Suisse Intl' fontsize='10'>-Return by State by Month (Bottom Right)</run>
                        <run>Æ&#10;&#10;</run>
                        <run fontname='Suisse Intl' fontsize='10'>Use the </run>
                        <run bold='true' fontcolor='#555555' fontname='Suisse Intl' fontsize='10'>Sub-Category, Customer Name</run>
                        <run bold='true' fontname='Suisse Intl' fontsize='10'>Æ </run>
                        <run fontname='Suisse Intl' fontsize='10'>and</run>
                        <run bold='true' fontname='Suisse Intl' fontsize='10'>Æ </run>
                        <run bold='true' fontcolor='#555555' fontname='Suisse Intl' fontsize='10'>State</run>
                        <run fontname='Suisse Intl' fontsize='10'> Dropdowns to provide the ability to filter to segment by any combination of the three dimensions</run>
                      </formatted-text>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='solid' />
                        <format attr='border-width' value='1' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                  </zone>
                  <zone h='21145' id='8' param='horz' type-v2='layout-flow' w='41602' x='781' y='52055'>
                    <zone h='21145' id='32' name='Returns by Product Category' w='41602' x='781' y='52055'>
                      <layout-cache cell-count-w='3' minheight='184' non-cell-size-w='55' type-h='scalable' type-w='cell' />
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                  </zone>
                  <zone h='19926' id='9' param='vert' type-v2='layout-flow' w='41602' x='781' y='32129'>
                    <zone h='19926' id='28' name='Correlation between Total Sales and Total Returns.' w='41602' x='781' y='32129'>
                      <layout-cache minheight='226' type-h='scalable' type-w='fixed' />
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                  </zone>
                  <zone h='37630' id='11' param='horz' type-v2='layout-flow' w='41211' x='42383' y='6511'>
                    <zone h='37630' id='36' name='Returns by State Map' w='41211' x='42383' y='6511'>
                      <layout-cache minwidth='202' type-h='fixed' type-w='scalable' />
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                  </zone>
                  <zone h='25672' id='13' param='horz' type-v2='layout-flow' w='41211' x='42383' y='44141'>
                    <zone h='25672' id='38' name='Returns by Month' w='41211' x='42383' y='44141'>
                      <layout-cache cell-count-w='12' minheight='199' non-cell-size-w='55' type-h='scalable' type-w='cell' />
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                  </zone>
                  <zone h='29145' id='39' name='Returns by State by Month' w='41211' x='42383' y='69813'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
              </zone>
              <zone fixed-size='160' h='92447' id='29' is-fixed='true' param='vert' type-v2='layout-flow' w='15625' x='83594' y='6511'>
                <zone h='24044' id='31' name='Correlation between Total Sales and Total Returns.' pane-specification-id='0' param='[federated.1pp1z5p19awkeq1cp8rvy0iejvcm].[none:Sub-Category:nk]' type-v2='color' w='15625' x='83594' y='6511'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='11849' id='34' mode='typeinlist' name='Returns by Customer' param='[federated.1pp1z5p19awkeq1cp8rvy0iejvcm].[none:Customer Name:nk]' type-v2='filter' w='15625' x='83594' y='30555'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='24044' id='35' name='Returns by Customer' pane-specification-id='0' param='[federated.1pp1z5p19awkeq1cp8rvy0iejvcm].[none:Customer Name:nk]' type-v2='color' w='15625' x='83594' y='42404'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='8464' id='37' name='Returns by State Map' pane-specification-id='0' param='[federated.1pp1z5p19awkeq1cp8rvy0iejvcm].[avg:Calculation_673288162860572672:qk]' type-v2='color' w='15625' x='83594' y='66448'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='24046' id='40' name='Returns by State by Month' param='[federated.1pp1z5p19awkeq1cp8rvy0iejvcm].[none:State:nk]' type-v2='filter' w='15625' x='83594' y='74912'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1700' minheight='1700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='54' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='97916' id='53' param='vert' type-v2='layout-flow' w='98438' x='781' y='1042'>
                <zone h='5469' id='43' type-v2='title' w='98438' x='781' y='1042'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='25618' id='20' type-v2='text' w='41602' x='781' y='6511'>
                  <formatted-text>
                    <run fontsize='10'>Use the following visualization to help understand the monitoring of returns in terms of </run>
                    <run fontname='Suisse Intl' fontsize='10'>what is causing customers to return their orders.</run>
                    <run>Æ&#10;</run>
                    <run bold='true' fontcolor='#555555' fontname='Suisse Intl' fontsize='10'>-Correlation between Total sales and Total Returns (Below)</run>
                    <run>Æ&#10;</run>
                    <run bold='true' fontcolor='#555555' fontname='Suisse Intl' fontsize='10'>-Returns by Category (Bottom Middle)</run>
                    <run>Æ&#10;</run>
                    <run bold='true' fontcolor='#555555' fontname='Suisse Intl' fontsize='10'>-Returns b Customer (Bottom Left)</run>
                    <run>Æ&#10;</run>
                    <run bold='true' fontcolor='#555555' fontname='Suisse Intl' fontsize='10'>-Returns by State (Top Right)</run>
                    <run>Æ&#10;</run>
                    <run bold='true' fontcolor='#555555' fontname='Suisse Intl' fontsize='10'>-Returns by Month (Right Middle)</run>
                    <run>Æ&#10;</run>
                    <run bold='true' fontcolor='#555555' fontname='Suisse Intl' fontsize='10'>-Return by State by Month (Bottom Right)</run>
                    <run>Æ&#10;&#10;</run>
                    <run fontname='Suisse Intl' fontsize='10'>Use the </run>
                    <run bold='true' fontcolor='#555555' fontname='Suisse Intl' fontsize='10'>Sub-Category, Customer Name</run>
                    <run bold='true' fontname='Suisse Intl' fontsize='10'>Æ </run>
                    <run fontname='Suisse Intl' fontsize='10'>and</run>
                    <run bold='true' fontname='Suisse Intl' fontsize='10'>Æ </run>
                    <run bold='true' fontcolor='#555555' fontname='Suisse Intl' fontsize='10'>State</run>
                    <run fontname='Suisse Intl' fontsize='10'> Dropdowns to provide the ability to filter to segment by any combination of the three dimensions</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='37630' id='36' is-fixed='true' name='Returns by State Map' w='41211' x='42383' y='6511'>
                  <layout-cache minwidth='202' type-h='fixed' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8464' id='37' name='Returns by State Map' pane-specification-id='0' param='[federated.1pp1z5p19awkeq1cp8rvy0iejvcm].[avg:Calculation_673288162860572672:qk]' type-v2='color' w='15625' x='83594' y='66448'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='145' h='19926' id='28' is-fixed='true' name='Correlation between Total Sales and Total Returns.' w='41602' x='781' y='32129'>
                  <layout-cache minheight='226' type-h='scalable' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='24044' id='31' name='Correlation between Total Sales and Total Returns.' pane-specification-id='0' param='[federated.1pp1z5p19awkeq1cp8rvy0iejvcm].[none:Sub-Category:nk]' type-v2='color' w='15625' x='83594' y='6511'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='189' h='25672' id='38' is-fixed='true' name='Returns by Month' w='41211' x='42383' y='44141'>
                  <layout-cache cell-count-w='12' minheight='199' non-cell-size-w='55' type-h='scalable' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='154' h='21145' id='32' is-fixed='true' name='Returns by Product Category' w='41602' x='781' y='52055'>
                  <layout-cache cell-count-w='3' minheight='184' non-cell-size-w='55' type-h='scalable' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='24046' id='40' mode='checkdropdown' name='Returns by State by Month' param='[federated.1pp1z5p19awkeq1cp8rvy0iejvcm].[none:State:nk]' type-v2='filter' w='15625' x='83594' y='74912'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='216' h='29145' id='39' is-fixed='true' name='Returns by State by Month' w='41211' x='42383' y='69813'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='11849' id='34' mode='checkdropdown' name='Returns by Customer' param='[federated.1pp1z5p19awkeq1cp8rvy0iejvcm].[none:Customer Name:nk]' type-v2='filter' w='15625' x='83594' y='30555'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='188' h='25498' id='33' is-fixed='true' name='Returns by Customer' w='41406' x='879' y='73330'>
                  <layout-cache minheight='200' type-h='scalable' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='24044' id='35' name='Returns by Customer' pane-specification-id='0' param='[federated.1pp1z5p19awkeq1cp8rvy0iejvcm].[none:Customer Name:nk]' type-v2='color' w='15625' x='83594' y='42404'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{3FE92C14-49C9-449D-A72B-6276345EBAFD}' />
    </dashboard>
    <dashboard name='Story 1' type='storyboard'>
      <style />
      <size maxheight='964' maxwidth='1016' minheight='964' minwidth='1016' />
      <zones>
        <zone h='100000' id='2' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98340' id='1' param='vert' removable='false' type-v2='layout-flow' w='98426' x='787' y='830'>
            <zone h='3423' id='3' type-v2='title' w='98426' x='787' y='830' />
            <zone h='10477' id='4' is-fixed='true' paired-zone-id='5' removable='false' type-v2='flipboard-nav' w='98426' x='787' y='4253' />
            <zone h='84440' id='5' paired-zone-id='4' removable='false' type-v2='flipboard' w='98426' x='787' y='14730'>
              <flipboard active-id='8' nav-type='caption' show-nav-arrows='true'>
                <story-points>
                  <story-point caption='SuperStore Data Analysis' captured-sheet='Dashboard 2' id='8' />
                  <story-point caption='Correlation between Total Sales and Total Returns' captured-sheet='Correlation between Total Sales and Total Returns.' id='9' />
                  <story-point caption='Returns by Category' captured-sheet='Returns by Product Category' id='3'>
                    <capturedDeltas>
                      <worksheet name='Returns by Product Category'>
                        <annotations>
                          <annotation class='point' delta-type='added' id='0' mark-position='1' pullback='12' text-width='180'>
                            <formatted-text>
                              <run fontcolor='#787878'>Category: </run>
                              <run bold='true'><![CDATA[<[federated.1pp1z5p19awkeq1cp8rvy0iejvcm].[none:Category:nk]>]]></run>
                              <run>Æ&#10;</run>
                              <run fontcolor='#787878'>Avg. Return: </run>
                              <run bold='true'><![CDATA[<[federated.1pp1z5p19awkeq1cp8rvy0iejvcm].[avg:Calculation_673288162860572672:qk]>]]></run>
                            </formatted-text>
                            <point>
                              <visual-coordinate class='mark'>
                                <tuple-reference>
                                  <tuple-descriptor>
                                    <pane-descriptor>
                                      <x-fields>
                                        <field>[federated.1pp1z5p19awkeq1cp8rvy0iejvcm].[none:Category:nk]</field>
                                      </x-fields>
                                      <y-fields>
                                        <field>[federated.1pp1z5p19awkeq1cp8rvy0iejvcm].[avg:Calculation_673288162860572672:qk]</field>
                                      </y-fields>
                                    </pane-descriptor>
                                    <columns>
                                      <field>[federated.1pp1z5p19awkeq1cp8rvy0iejvcm].[avg:Calculation_673288162860572672:qk]</field>
                                      <field>[federated.1pp1z5p19awkeq1cp8rvy0iejvcm].[none:Category:nk]</field>
                                    </columns>
                                  </tuple-descriptor>
                                  <tuple>
                                    <value>0.27331327889987106</value>
                                    <value>&quot;Technology&quot;</value>
                                  </tuple>
                                </tuple-reference>
                              </visual-coordinate>
                            </point>
                            <body x='-61' y='-8' />
                          </annotation>
                        </annotations>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='Returns by Customer' captured-sheet='Returns by Customer' id='11' />
                  <story-point caption='Returns by State' captured-sheet='Returns by State Map' id='4'>
                    <capturedDeltas>
                      <worksheet name='Returns by State Map'>
                        <annotations>
                          <annotation class='point' delta-type='edited' id='0' mark-position='1' pullback='12' text-width='150'>
                            <formatted-text>
                              <run fontcolor='#787878'>State: </run>
                              <run bold='true'><![CDATA[<[federated.1pp1z5p19awkeq1cp8rvy0iejvcm].[none:State:nk]>]]></run>
                              <run>Æ&#10;</run>
                              <run fontcolor='#787878'>Avg. Return: </run>
                              <run bold='true'><![CDATA[<[federated.1pp1z5p19awkeq1cp8rvy0iejvcm].[avg:Calculation_673288162860572672:qk]>]]></run>
                            </formatted-text>
                            <point>
                              <visual-coordinate class='mark'>
                                <tuple-reference>
                                  <tuple-descriptor>
                                    <pane-descriptor>
                                      <x-fields>
                                        <field>[federated.1pp1z5p19awkeq1cp8rvy0iejvcm].[Longitude (generated)]</field>
                                      </x-fields>
                                      <y-fields>
                                        <field>[federated.1pp1z5p19awkeq1cp8rvy0iejvcm].[Latitude (generated)]</field>
                                      </y-fields>
                                    </pane-descriptor>
                                    <columns>
                                      <field>[federated.1pp1z5p19awkeq1cp8rvy0iejvcm].[avg:Calculation_673288162860572672:qk]</field>
                                      <field>[federated.1pp1z5p19awkeq1cp8rvy0iejvcm].[none:State:nk]</field>
                                      <field>[federated.1pp1z5p19awkeq1cp8rvy0iejvcm].[Geometry (generated)]</field>
                                      <field>[federated.1pp1z5p19awkeq1cp8rvy0iejvcm].[Latitude (generated)]</field>
                                      <field>[federated.1pp1z5p19awkeq1cp8rvy0iejvcm].[Longitude (generated)]</field>
                                    </columns>
                                  </tuple-descriptor>
                                  <tuple>
                                    <value>0.56842105263157894</value>
                                    <value>&quot;Utah&quot;</value>
                                    <value>&quot;POLYGON((-114.0506 37.0004,-114.0525 37.6048,-114.0497 37.8236,-114.0502 38.5729,-114.0477 39.5427,-114.0467 40.1169,-114.0421 40.9999,-114.0396 41.8848,-114.0417 41.9937,-113.8933 41.9881,-113.0008 41.9983,-112.193 42.0012,-112.1095 41.9976,-111.5073 41.9995,-111.0467 42.0016,-111.0458 41.5798,-111.0467 40.998,-110.2379 40.9954,-110.0007 40.9974,-109.0501 41.0007,-109.0482 40.6536,-109.0508 40.2227,-109.0514 39.4977,-109.0508 39.3667,-109.0542 38.875,-109.0595 38.7199,-109.0601 38.2755,-109.0421 38.153,-109.0415 37.8812,-109.0435 37.4847,-109.0458 37.375,-109.0452 36.9991,-110.0007 36.998,-110.4702 36.998,-110.509 37.004,-111.2783 37.0005,-111.4128 37.0015,-112.8994 37.0004,-114.0506 37.0004))&quot;</value>
                                    <value>39.25</value>
                                    <value>-111.75</value>
                                  </tuple>
                                </tuple-reference>
                              </visual-coordinate>
                            </point>
                            <body x='-145' y='136' />
                          </annotation>
                        </annotations>
                        <style delta-type='added'>
                          <style-rule element='axis'>
                            <encoding attr='space' class='0' field='[federated.1pp1z5p19awkeq1cp8rvy0iejvcm].[Latitude (generated)]' field-type='quantitative' max='7641771.3432927383' min='-447643.41898524051' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
                            <encoding attr='space' class='0' field='[federated.1pp1z5p19awkeq1cp8rvy0iejvcm].[Longitude (generated)]' field-type='quantitative' max='-6369572.3247395512' min='-14722882.467218069' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
                          </style-rule>
                          <style-rule element='annotation'>
                            <format attr='fill-color' id='annotation_0' value='#d4d4d4e6' />
                            <format attr='rounding' id='annotation_0' value='small' />
                          </style-rule>
                        </style>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='Returns by Month' captured-sheet='Returns by Month' id='5'>
                    <capturedDeltas>
                      <worksheet name='Returns by Month'>
                        <annotations>
                          <annotation class='point' delta-type='added' id='0' mark-position='1' pullback='12' text-width='180'>
                            <formatted-text>
                              <run bold='true' fontcolor='#787878'>Month of Order Date: </run>
                              <run bold='true'><![CDATA[<[federated.1pp1z5p19awkeq1cp8rvy0iejvcm].[mn:Order Date:ok]>]]></run>
                              <run>Æ&#10;</run>
                              <run bold='true' fontcolor='#787878'>Avg. Return: </run>
                              <run bold='true'><![CDATA[<[federated.1pp1z5p19awkeq1cp8rvy0iejvcm].[avg:Calculation_673288162860572672:qk]>]]></run>
                            </formatted-text>
                            <point>
                              <visual-coordinate class='mark'>
                                <tuple-reference>
                                  <tuple-descriptor>
                                    <pane-descriptor>
                                      <x-fields>
                                        <field>[federated.1pp1z5p19awkeq1cp8rvy0iejvcm].[mn:Order Date:ok]</field>
                                      </x-fields>
                                      <y-fields>
                                        <field>[federated.1pp1z5p19awkeq1cp8rvy0iejvcm].[avg:Calculation_673288162860572672:qk]</field>
                                      </y-fields>
                                    </pane-descriptor>
                                    <columns>
                                      <field>[federated.1pp1z5p19awkeq1cp8rvy0iejvcm].[avg:Calculation_673288162860572672:qk]</field>
                                      <field>[federated.1pp1z5p19awkeq1cp8rvy0iejvcm].[mn:Order Date:ok]</field>
                                    </columns>
                                  </tuple-descriptor>
                                  <tuple>
                                    <value>0.38636363636363635</value>
                                    <value>8</value>
                                  </tuple>
                                </tuple-reference>
                              </visual-coordinate>
                            </point>
                            <body x='130' y='-20' />
                          </annotation>
                        </annotations>
                        <style delta-type='added'>
                          <style-rule element='annotation'>
                            <format attr='fill-color' id='addedDelta_annotation_0' value='#c0c0c0e6' />
                          </style-rule>
                        </style>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='Monitoring Returns ' captured-sheet='Monitoring Returns' id='7'>
                    <capturedDeltas>
                      <worksheet name='Returns by Customer'>
                        <annotations>
                          <annotation class='point' delta-type='added' id='0' mark-position='1' pullback='12' text-width='123'>
                            <formatted-text>
                              <run fontcolor='#787878'>Customer Name: </run>
                              <run bold='true'><![CDATA[<[federated.1pp1z5p19awkeq1cp8rvy0iejvcm].[none:Customer Name:nk]>]]></run>
                              <run>Æ&#10;</run>
                              <run fontcolor='#787878'>Return: </run>
                              <run bold='true'><![CDATA[<[federated.1pp1z5p19awkeq1cp8rvy0iejvcm].[sum:Calculation_673288162860572672:qk]>]]></run>
                            </formatted-text>
                            <point>
                              <visual-coordinate class='mark'>
                                <tuple-reference>
                                  <tuple-descriptor>
                                    <pane-descriptor>
                                      <x-fields>
                                        <field>[federated.1pp1z5p19awkeq1cp8rvy0iejvcm].[none:Customer Name:nk]</field>
                                      </x-fields>
                                      <y-fields>
                                        <field>[federated.1pp1z5p19awkeq1cp8rvy0iejvcm].[sum:Calculation_673288162860572672:qk]</field>
                                      </y-fields>
                                    </pane-descriptor>
                                    <columns>
                                      <field>[federated.1pp1z5p19awkeq1cp8rvy0iejvcm].[none:Customer Name:nk]</field>
                                      <field>[federated.1pp1z5p19awkeq1cp8rvy0iejvcm].[sum:Calculation_673288162860572672:qk]</field>
                                    </columns>
                                  </tuple-descriptor>
                                  <tuple>
                                    <value>&quot;Seth Vernon&quot;</value>
                                    <value>196</value>
                                  </tuple>
                                </tuple-reference>
                              </visual-coordinate>
                            </point>
                            <body x='91' y='31' />
                          </annotation>
                        </annotations>
                        <style delta-type='added'>
                          <style-rule element='annotation'>
                            <format attr='border-color' id='addedDelta_annotation_0' value='#000000' />
                            <format attr='border-style' id='addedDelta_annotation_0' value='solid' />
                            <format attr='border-width' id='addedDelta_annotation_0' value='1' />
                            <format attr='fill-color' id='addedDelta_annotation_0' value='#e6e6e6e6' />
                            <format attr='rounding' id='addedDelta_annotation_0' value='small' />
                            <format attr='stroke-color' id='addedDelta_annotation_0' value='#000000' />
                            <format attr='stroke-size' id='addedDelta_annotation_0' value='1' />
                          </style-rule>
                        </style>
                      </worksheet>
                      <worksheet name='Returns by State Map'>
                        <annotations>
                          <annotation class='point' delta-type='edited' id='0' mark-position='1' pullback='12' text-width='145'>
                            <formatted-text>
                              <run fontcolor='#787878'>State: </run>
                              <run bold='true'><![CDATA[<[federated.1pp1z5p19awkeq1cp8rvy0iejvcm].[none:State:nk]>]]></run>
                              <run>Æ&#10;</run>
                              <run fontcolor='#787878'>Avg. Return: </run>
                              <run bold='true'><![CDATA[<[federated.1pp1z5p19awkeq1cp8rvy0iejvcm].[avg:Calculation_673288162860572672:qk]>]]></run>
                            </formatted-text>
                            <point>
                              <visual-coordinate class='mark'>
                                <tuple-reference>
                                  <tuple-descriptor>
                                    <pane-descriptor>
                                      <x-fields>
                                        <field>[federated.1pp1z5p19awkeq1cp8rvy0iejvcm].[Longitude (generated)]</field>
                                      </x-fields>
                                      <y-fields>
                                        <field>[federated.1pp1z5p19awkeq1cp8rvy0iejvcm].[Latitude (generated)]</field>
                                      </y-fields>
                                    </pane-descriptor>
                                    <columns>
                                      <field>[federated.1pp1z5p19awkeq1cp8rvy0iejvcm].[avg:Calculation_673288162860572672:qk]</field>
                                      <field>[federated.1pp1z5p19awkeq1cp8rvy0iejvcm].[none:State:nk]</field>
                                      <field>[federated.1pp1z5p19awkeq1cp8rvy0iejvcm].[Geometry (generated)]</field>
                                      <field>[federated.1pp1z5p19awkeq1cp8rvy0iejvcm].[Latitude (generated)]</field>
                                      <field>[federated.1pp1z5p19awkeq1cp8rvy0iejvcm].[Longitude (generated)]</field>
                                    </columns>
                                  </tuple-descriptor>
                                  <tuple>
                                    <value>0.56842105263157894</value>
                                    <value>&quot;Utah&quot;</value>
                                    <value>&quot;POLYGON((-114.0506 37.0004,-114.0525 37.6048,-114.0497 37.8236,-114.0502 38.5729,-114.0477 39.5427,-114.0467 40.1169,-114.0421 40.9999,-114.0396 41.8848,-114.0417 41.9937,-113.8933 41.9881,-113.0008 41.9983,-112.193 42.0012,-112.1095 41.9976,-111.5073 41.9995,-111.0467 42.0016,-111.0458 41.5798,-111.0467 40.998,-110.2379 40.9954,-110.0007 40.9974,-109.0501 41.0007,-109.0482 40.6536,-109.0508 40.2227,-109.0514 39.4977,-109.0508 39.3667,-109.0542 38.875,-109.0595 38.7199,-109.0601 38.2755,-109.0421 38.153,-109.0415 37.8812,-109.0435 37.4847,-109.0458 37.375,-109.0452 36.9991,-110.0007 36.998,-110.4702 36.998,-110.509 37.004,-111.2783 37.0005,-111.4128 37.0015,-112.8994 37.0004,-114.0506 37.0004))&quot;</value>
                                    <value>39.25</value>
                                    <value>-111.75</value>
                                  </tuple>
                                </tuple-reference>
                              </visual-coordinate>
                            </point>
                            <body x='-17' y='106' />
                          </annotation>
                        </annotations>
                        <style delta-type='added'>
                          <style-rule element='axis'>
                            <encoding attr='space' class='0' field='[federated.1pp1z5p19awkeq1cp8rvy0iejvcm].[Latitude (generated)]' field-type='quantitative' max='6634507.2996566165' min='1751508.3590068601' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
                            <encoding attr='space' class='0' field='[federated.1pp1z5p19awkeq1cp8rvy0iejvcm].[Longitude (generated)]' field-type='quantitative' max='-6671774.5932160821' min='-15180967.167427145' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
                          </style-rule>
                        </style>
                      </worksheet>
                      <worksheet name='Returns by State by Month'>
                        <annotations>
                          <annotation class='point' delta-type='added' id='0' mark-position='1' pullback='12' text-width='143'>
                            <formatted-text>
                              <run fontcolor='#787878'>Month of Order Date: </run>
                              <run bold='true'><![CDATA[<[federated.1pp1z5p19awkeq1cp8rvy0iejvcm].[mn:Order Date:ok]>]]></run>
                              <run>Æ&#10;</run>
                              <run fontcolor='#787878'>State: </run>
                              <run bold='true'><![CDATA[<[federated.1pp1z5p19awkeq1cp8rvy0iejvcm].[none:State:nk]>]]></run>
                              <run>Æ&#10;</run>
                              <run fontcolor='#787878'>Avg. Return: </run>
                              <run bold='true'><![CDATA[<[federated.1pp1z5p19awkeq1cp8rvy0iejvcm].[avg:Calculation_673288162860572672:qk]>]]></run>
                            </formatted-text>
                            <point>
                              <visual-coordinate class='mark'>
                                <tuple-reference>
                                  <tuple-descriptor>
                                    <pane-descriptor>
                                      <x-fields>
                                        <field>[federated.1pp1z5p19awkeq1cp8rvy0iejvcm].[none:State:nk]</field>
                                        <field>[federated.1pp1z5p19awkeq1cp8rvy0iejvcm].[mn:Order Date:ok]</field>
                                      </x-fields>
                                      <y-fields>
                                        <field>[federated.1pp1z5p19awkeq1cp8rvy0iejvcm].[avg:Calculation_673288162860572672:qk]</field>
                                      </y-fields>
                                    </pane-descriptor>
                                    <columns>
                                      <field>[federated.1pp1z5p19awkeq1cp8rvy0iejvcm].[avg:Calculation_673288162860572672:qk]</field>
                                      <field>[federated.1pp1z5p19awkeq1cp8rvy0iejvcm].[mn:Order Date:ok]</field>
                                      <field>[federated.1pp1z5p19awkeq1cp8rvy0iejvcm].[none:State:nk]</field>
                                    </columns>
                                  </tuple-descriptor>
                                  <tuple>
                                    <value>0.97297297297297303</value>
                                    <value>8</value>
                                    <value>&quot;Utah&quot;</value>
                                  </tuple>
                                </tuple-reference>
                              </visual-coordinate>
                            </point>
                            <body x='-103' y='38' />
                          </annotation>
                        </annotations>
                        <style delta-type='added'>
                          <style-rule element='axis'>
                            <encoding attr='space' class='0' field='[federated.1pp1z5p19awkeq1cp8rvy0iejvcm].[avg:Calculation_673288162860572672:qk]' field-type='quantitative' max='1.1017045701091941' min='-0.064962152188474384' range-type='fixed' scope='rows' type='space' />
                          </style-rule>
                          <style-rule element='annotation'>
                            <format attr='border-color' id='addedDelta_annotation_0' value='#000000' />
                            <format attr='border-style' id='addedDelta_annotation_0' value='solid' />
                            <format attr='rounding' id='addedDelta_annotation_0' value='small' />
                            <format attr='stroke-color' id='addedDelta_annotation_0' value='#000000' />
                            <format attr='stroke-size' id='addedDelta_annotation_0' value='2' />
                          </style-rule>
                        </style>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='Conlclusion' captured-sheet='Dashboard 3' id='10' />
                </story-points>
              </flipboard>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <simple-id uuid='{D8C4C78C-12A5-467A-B057-0FB8FC756D96}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Correlation between Total Sales and Total Returns.'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1pp1z5p19awkeq1cp8rvy0iejvcm].[none:Sub-Category:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{B45DB225-60F0-4DB0-864C-83ED135DFAB7}' />
    </window>
    <window class='worksheet' name='Returns by Product Category'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{7D21ADD7-CD99-4CBE-8978-B88C19A31C50}' />
    </window>
    <window class='worksheet' name='Returns by Customer'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='typeinlist' param='[federated.1pp1z5p19awkeq1cp8rvy0iejvcm].[none:Customer Name:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1pp1z5p19awkeq1cp8rvy0iejvcm].[none:Customer Name:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{ED4EB7E7-9E4A-4E3E-84BD-0C9F4809C40D}' />
    </window>
    <window class='worksheet' name='Returns by State Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1pp1z5p19awkeq1cp8rvy0iejvcm].[avg:Calculation_673288162860572672:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{38A8A058-61C3-4B7A-8A70-77DBA00E1DA5}' />
    </window>
    <window class='worksheet' name='Returns by Month'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{D0441BB1-B801-4889-BDB0-33E60A1599C0}' />
    </window>
    <window class='worksheet' name='Returns by State by Month'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1pp1z5p19awkeq1cp8rvy0iejvcm].[none:State:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{05ABBF2B-3F01-4613-B6C7-F48047B2343A}' />
    </window>
    <window class='dashboard' name='Monitoring Returns'>
      <viewpoints>
        <viewpoint name='Correlation between Total Sales and Total Returns.'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Returns by Customer' />
        <viewpoint name='Returns by Month'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Returns by Product Category'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Returns by State Map'>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='1' />
        </viewpoint>
        <viewpoint name='Returns by State by Month'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='36' />
      <simple-id uuid='{FDFF6041-829E-46B0-92C3-BAA76E601522}' />
    </window>
    <window class='dashboard' name='Dashboard 2'>
      <viewpoints />
      <active id='3' />
      <simple-id uuid='{4DB6AB6A-CBDC-44DD-85C4-66290CA27F46}' />
    </window>
    <window class='dashboard' name='Dashboard 3'>
      <viewpoints />
      <active id='3' />
      <simple-id uuid='{81FD6CA1-FD1D-4719-9F4F-6FE915F37C92}' />
    </window>
    <window class='dashboard' maximized='true' name='Story 1'>
      <viewpoints />
      <active id='-1' />
      <simple-id uuid='{9AFFD704-91B2-4DF4-B9BD-0DBA17F4C3FE}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Correlation between Total Sales and Total Returns.' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Dashboard 2' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Dashboard 3' width='192'>
      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
      DUoHnScAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Monitoring Returns' width='192'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='Returns by Month' width='192'>
      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
      xAQzrlpi107Tc2mIcDLHjrogA0PjFIpuHg/8+h4yywUOmlwIE2UhV4KFo0mvE44mARCOJgEQ
      jiYBEI4mARCOJgEQjiYBEI4mARCOJgEQjiYBEI4mARCOJgEQjiYBEI4mARCOJgEQjlayAChl
      YxZN7JvlBQql1HLpI8uVX6ZpYll2qZoUYs1KUxKpbIZ6TtI/GSdUt4XDB7ajA2P93fRfW+T+
      555ETV3lVM91cvh59ouP4pYKSLEBlKwofsEO8qVnHqTvwnkyFoRcGm079kNhuSh+Lpbk/kef
      whw6x3gG2v3LI8GNwvgyF6YJhypRUfwHanxZnqnv438GdJ2b31+e1U86viifEhXFu4ioFO++
      dxzdV0N7do7FQgXpyT4uDw4S1dy0hwJ0nXmfXM7miR2gax++K4TUBItyKFlRvG0WSKQyBEJh
      DGViaW7MbJJc0UIzXETCQTLJJLo3QNDnufk8KYoX5SR3hRCOJr1OOJoEQDiaBEA4mgRAOJoE
      QDiaBEA4mgRAOJoEQDiaBEA4mgRAOJoEQDiaBEA4mgRAOJoEQDhayQJQzMa5cukKS+n8B5bF
      uHLpCrF0ASuX5Mqlbrq7+8l/yu8RYj2VbKb43p5LeIIeLvf0UlTLlV6XurrxBT1cuthHbGqS
      rDtIQ0MNRkkaFWLtSlMUb5mY/ihbN2/FSpwlW4SwG/CF2bJpK8XFs8ym84xdm0F17qaurhrL
      tm7OEm9ZlkyULcqiNDXBmoZZKGBZJsWijmvlJb5YLGDZRfKWwZbte9i202D49JsMpTaxJWxg
      GIZUhImyKk2vM9y0VRi8duyXFML1aPEJZpNFWiq8HDv2K6yKevIz13nzV7/kaspPQ7AkrQqx
      ZlITLBxNep1wNAmAcDQJgHA0CYBwNAmAcDQJgHA0CYBwNAmAcDQJgHA0CYBwNAmAcLTSFcTk
      kgz2DxLPFG4uM3MJBlaWKbvA6LUBJucTpWpSiDUrWUFMX08PpmZysacXc6Ug5nLXBZRmcvFi
      PxPX+5nP2gx2nSctM6WKDaIkAVCWScEXZce2HdT6C2SKy8stT4jtnTuoceWYy5ls7djGvrYA
      k8lStCrE2pVmlkhNwyoWsW0L09QwVgpiTNPEViZFy8DQFKZpkc8qfN6StCrEmpVkBNAMNy0h
      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
      JYS8X5gAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Returns by Product Category' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Returns by State Map' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Returns by State by Month' width='192'>
      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
      0BoAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Story 1' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
